#include <LiquidCrystal.h>

LiquidCrystal lcd(2, 3, 4, 5, 6, 7);
#include <LiquidCrystal.h>

LiquidCrystal lcd(2, 3, 4, 5, 6, 7);

int analogPin = A0;
int botonInicio = 8;  // Botón para iniciar la toma de muestras
int botonDetener = 13;  // Botón para detener la toma de muestras

int val = 0;
bool adquiriendo = false;

int valorMax = 511;  
int valorMin = 511;
float amplitudVoltios = 0;  // Variable
const int offset = 511;  // Punto 0 

unsigned long tiempoUltimoCambio = 0;
const unsigned long debounceDelay = 200;

void setup() {
  Serial.begin(9600);
  lcd.begin(16, 2);

  pinMode(botonInicio, INPUT_PULLUP);  
  pinMode(botonDetener, INPUT_PULLUP);  

  lcd.print("Esperando...");
}

void loop() {
  unsigned long tiempoActual = millis();

  // Iniciar con el botón de inicio
  if (digitalRead(botonInicio) == LOW && (tiempoActual - tiempoUltimoCambio > debounceDelay)) {
    adquiriendo = true;  // Cambia el estado a adquiriendo
    lcd.clear();
    lcd.print("Adquiriendo...");
    valorMax = offset;  
    valorMin = offset;  
    tiempoUltimoCambio = tiempoActual;
  }

  // Detener 
  if (digitalRead(botonDetener) == LOW && (tiempoActual - tiempoUltimoCambio > debounceDelay)) {
    adquiriendo = false;  // Detenido
    lcd.clear();
    lcd.print("Detenido...");

    // Calcular 
    amplitudVoltios = (valorMax - valorMin) * (5.0 / 1023.0);

    // Mostrar en el Monitor Serial
    Serial.print("Amplitud pico a pico: ");
    Serial.print(amplitudVoltios);
    Serial.println(" V");

    // Mostrar la amplitud en la LCD
    lcd.setCursor(0, 1);
    lcd.print("Amp: ");
    lcd.print(amplitudVoltios);
    lcd.print(" V");

    tiempoUltimoCambio = tiempoActual;
  }

  // leer los valores del pin analógico
  if (adquiriendo) {
    val = analogRead(analogPin);  // Leer el valor analógico

    // Actualiza 
    if (val > valorMax) {
      valorMax = val;
    }
    if (val < valorMin) {
      valorMin = val;
    }

    // Monitor Serial
    Serial.print("Valor actual: ");
    Serial.println(val);

    // Mostrar el valor en la LCD
    lcd.setCursor(0, 1);
    lcd.print("Valor: ");
    lcd.print(val);

    delayMicroseconds(10);  // Pausa
  }
}
